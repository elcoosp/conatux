# Check https://circleci.com/docs/2.0/ for more details
# for config.yml syntax see https://circleci.com/docs/2.0/configuration-reference/
version: 2.1
jobs:
  test-e2e:
    docker:
      # find Docker image at https://github.com/cypress-io/cypress-docker-images
      - image: cypress/browsers:chrome67
    steps:
      - checkout

      # Download and cache dependencies for the app and for tests
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - dependencies-
      # - run:
      #     name: Install chrome
      #     command: |
      #       apt-get update
      #       apt-get install -y lsb-release libappindicator3-1 fonts-liberation xdg-utils
      #       curl -L -o google-chrome.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      #       dpkg -i google-chrome.deb
      #       sed -i 's|HERE/chrome"|HERE/chrome" --no-sandbox|g' /opt/google/chrome/google-chrome
      #       rm google-chrome.deb
      # Install NPM dependencies quickly using "npm ci"
      # https://on.cypress.io/continuous-integration
      # https://docs.npmjs.com/cli/ci
      - run:
          name: Install dependencies
          command: npm ci
      - run:
          name: Bootstrap
          command: npx lerna bootstrap
      - save_cache:
          paths:
            # all NPM modules
            - ~/.npm
            # Cypress binary (or yarn dependencies)
            - ~/.cache
          key: dependencies-{{ checksum "package.json" }}

      - run:
          name: Start server
          command: npm start
          background: true

      ## now run cypress headlessly
      ## and record all of the tests.
      ## Cypress will search for a
      ## CYPRESS_RECORD_KEY environment
      ## variable by default and apply
      ## this to the run.
      - run:
          name: Run Cypress tests
          command: npm run test:e2e:run

      ## alternatively we could specify
      ## a specific record key to use
      ## like this without having to
      ## configure environment variables
      ## - npm run cypress:run -- --record --key <your_record_key>
      ## you can also start the server and
      ## run e2e tests and shut down server with
      ## a single command
      ## - npm run test:ci
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      - image: circleci/node:10.14.2
    steps: # a collection of executable commands
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache: # special step to restore the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: Npm install
          command: npm ci
      - run:
          name: Bootstrap
          command: npx lerna bootstrap
      - save_cache: # special step to save the dependency cache
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: Lint code
          command: npm run test:lint
      - run:
          name: Test
          command: npm run test:cov
      - run:
          name: Build webpack
          command: npm run build:wp
      - run:
          name: Check bundle size
          command: npm run test:bundlesize
      - run:
          name: Upload coverage
          command: bash <(curl -s https://codecov.io/bash)
      - store_artifacts:
          path: coverage # special step to upload test results for display in Test Summary

workflows:
  version: 2
  tests:
    jobs:
      - test-e2e
      - build
